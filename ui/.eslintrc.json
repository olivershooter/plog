{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "extends": [
    "plugin:react/recommended",
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "tsconfig.json"
  },
  "plugins": ["react", "@typescript-eslint", "prettier"],
  "settings": {
    "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
    "import/resolver": {
      "typescript": {
        "directory": "tsconfig.json"
      },
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react/jsx-no-bind": "off",

    // We use arrow functions so this is off
    "react/function-component-definition": "off",
    "arrow-body-style": "off",

    // Using Styled-components at the bottom of the page, TS should catch any other errors
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "off",

    // TS should catch any bad vars and with Redux, etc. we might need them about
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-empty-interface": "off",

    // We don't need default props
    "react/require-default-props": "off",

    // We can ignore this one too
    "react/jsx-no-useless-fragment": "off",

    // We prefer the default export
    "prefer-default-export": "off",
    "import/prefer-default-export": "off",

    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ]
  }
}
